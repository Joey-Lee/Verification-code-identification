为了实现自动签到，做过的尝试：
1、手动输入验证码，能够实现签到功能，但是不是“自动”
2、尝试获得网站cookies，绕过验证码登陆，失败
3、尝试识别出验证码中的数字：
	a.使用开源工具tesseract-OCR直接识别图片中的数字，识别效果很差。因为图片中数字做过旋转，不是竖立的，另外图片背景中还添加了一些干扰线，进一步影响了数字的识别。
	b.尝试将待识别图片与已知的图片库做比较，但是由于用作标准的图片未作去噪处理，识别效果也很差
	c.先为0~9中每个数字建立了标准图片库，库中图片来源于网站验证码，全部经过图像处理后，再由人工分类添加进每一类中。在最后待识别与标准图片做相似度比较时，分别采用了两种算法。先尝试了计算两张图片余弦相似度，发现识别结果很不理想；再尝试了计算两张图片欧式距离，结果效果很不错，识别率很高，除了极个别会识别有误，如“1”和“7”。
	d.下一步尝试采用机器学习的方法做识别。

使用机器学习包sklearn中的SVM(支持向量机)的方法来做识别：
	a.获得用作训练模型的样本和标签
	b.训练模型
	c.做出预测
感觉使用这个工具很简单，但和kNN哪种方法对比，在识别验证码图片这个问题上，识别的结果却不如kNN。初步分析原因有：
1、对于训练模型的样本特征的选择。选取的特征是每张图片每行每列中“黑点”的数目，也许这个特征不是最好的选择。
2、我使用的模型，核函数和各项参数都是选择的默认，选择不同的核函数和参数都会对预测的结果产生不同的影响
3、训练模型的样本数不是足够多

使用工具很简单，但是支撑工具的理论还是要适当了解。